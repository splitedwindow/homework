"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _context = _interopRequireDefault(require("./context"));

var _SnackbarContainer = _interopRequireDefault(require("./SnackbarContainer"));

var _Snackbar = _interopRequireDefault(require("./Snackbar"));

var _core = require("@emotion/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var snackbarCounter = 0;

var SnackbarProvider = function SnackbarProvider(props) {
  var _useState = (0, _react.useState)([]),
      _useState2 = _slicedToArray(_useState, 2),
      snackbars = _useState2[0],
      setSnackbars = _useState2[1];

  var children = props.children,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'bottom-center' : _props$placement;

  var add = function add(content, _ref) {
    var _ref$appearance = _ref.appearance,
        appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
        _ref$autoDismiss = _ref.autoDismiss,
        autoDismiss = _ref$autoDismiss === void 0 ? true : _ref$autoDismiss,
        _ref$delay = _ref.delay,
        delay = _ref$delay === void 0 ? 5000 : _ref$delay;
    var id = snackbarCounter++;
    var snackbar = {
      id: id,
      content: content,
      appearance: appearance,
      autoDismiss: autoDismiss,
      delay: delay
    };
    setSnackbars([].concat(_toConsumableArray(snackbars), [snackbar]));
  };

  var _remove = function remove(id) {
    setSnackbars(snackbars.filter(function (s) {
      return s.id !== id;
    }));
  };

  return (0, _core.jsx)(_context["default"].Provider, {
    value: {
      add: add,
      remove: _remove
    }
  }, children, /*#__PURE__*/(0, _reactDom.createPortal)((0, _core.jsx)(_SnackbarContainer["default"], {
    placement: placement
  }, snackbars.map(function (_ref2) {
    var id = _ref2.id,
        content = _ref2.content,
        appearance = _ref2.appearance,
        autoDismiss = _ref2.autoDismiss,
        delay = _ref2.delay;
    return (0, _core.jsx)(_Snackbar["default"], {
      key: id,
      appearance: appearance,
      autoDismiss: autoDismiss,
      delay: delay,
      remove: function remove() {
        return _remove(id);
      }
    }, content);
  })), document.body));
};

var _default = SnackbarProvider;
exports["default"] = _default;